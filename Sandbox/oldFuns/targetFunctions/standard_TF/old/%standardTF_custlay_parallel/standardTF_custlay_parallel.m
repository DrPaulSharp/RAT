function [outSsubs,...
backgs,...
qshifts,...
sfs,...
nbas,...
nbss,...
resols,...
chis,...
reflectivity,...
Simulation,...
shifted_data,...
layerSlds,...
sldProfiles,...
allLayers,...
allRoughs] = standardTF_custlay_parallel(resam, ...
                numberOfContrasts, ...
                geometry, ...
                nbairs , ...
                nbsubs , ...
                repeats , ...
                cBacks , ...
                cShifts , ...
                cScales , ...
                cNbas , ...
                cNbss, ...
                cRes , ...
                backs , ...
                shifts , ...
                sf, ...
                nba , ...
                nbs , ...
                res , ...
                dataPresent , ...
                allData , ...
                dataLimits , ...
                simLimits , ...
                repeatLayers , ...
                nParams , ...
                params , ...
                contrastLayers , ...
                numberOfLayers , ...
                layersDetails , ...
                whichType , ...
                fileHandle ,...
                path)

            
%coder.extrinsic('callModules');            
            
%Pre-Allocation...
backgs = zeros(numberOfContrasts,1);
qshifts = zeros(numberOfContrasts,1);
sfs = zeros(numberOfContrasts,1);
nbas = zeros(numberOfContrasts,1);
nbss = zeros(numberOfContrasts,1);
resols = zeros(numberOfContrasts,1);
allRoughs = zeros(numberOfContrasts,1);
outSsubs = zeros(numberOfContrasts,1);
chis =  zeros(numberOfContrasts,1);
allLayers = cell(numberOfContrasts,1);
layerSlds = cell(numberOfContrasts,1);
sldProfiles = cell(numberOfContrasts,1);
shifted_data = cell(numberOfContrasts,1);
reflectivity = cell(numberOfContrasts,1);
Simulation = cell(numberOfContrasts,1);
boxes = cell(1,1);


parfor i = 1:numberOfContrasts
    [backgs(i),qshifts(i),sfs(i),nbas(i),nbss(i),resols(i)] = backSort(cBacks(i),cShifts(i),cScales(i),cNbas(i),cNbss(i),cRes(i),backs,shifts,sf,nba,nbs,res);
    [outLayers,allRoughs(i)] = call_customLayers(params,i,fileHandle,path,nbairs(i),nbsubs(i));
    allLayers{i} = outLayers;
    
    [outLayers, outSsubs(i)] = groupLayers_Mod(outLayers,allRoughs(i),geometry,nbairs(i),nbsubs(i));
    
    sldProfile = makeSLDProfiles(nbairs(i),nbsubs(i),outLayers,outSsubs(i),repeats{i});
    sldProfiles{i} = sldProfile;

    if resam(i) == 1
        layerSld = resampleLayers(sldProfile);
        layerSlds{i} = layerSld;
    else
        layerSld = outLayers;
        layerSlds{i} = layerSld;
    end
   
    shifted_dat = shiftdata(sfs(i),qshifts(i),dataPresent(i),allData{i},dataLimits{i});
    shifted_data{i} = shifted_dat;
    
    [reflect,Simul] = callReflectivity(nbairs(i),nbsubs(i),simLimits{i},repeatLayers{i},shifted_dat,layerSld,outSsubs(i),backgs(i),resols(i));
    reflectivity{i} = reflect;
    Simulation{i} = Simul;
    
    chis(i) = chiSquared(shifted_dat,reflect,nParams);
end


end
